{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.1",

  "parameters": {
    "adminUserName":        { "type": "string"       },
    "adminPassword":        { "type": "securestring" },
    "cmUsername":           { "type": "string"       },
    "cmPassword":           { "type": "securestring" },
    "storageAccountPrefix": { "type": "string"       },
    "dnsNamePrefix":        { "type": "string"       },
    "storageAccountType":   { "type": "string" },
    "virtualNetworkName":   { "type": "string" },
    "vnetNewOrExisting" :   { "type": "string" },
    "virtualNetworkRGName": { "type": "string" },
    "subnetName":           { "type": "string" },
    "addressPrefix":        { "type": "string" },
    "subnetPrefix":         { "type": "string" },
    "masterNodeIPAddress":  { "type": "string" },
    "datanodeOffset":       { "type": "int"    },
    "highAvailablily":      { "type": "string" },
    "tshirtSize":           { "type": "string" },
    "numberOfDataNodes":    { "type": "int"    },
    "vmSize":               { "type": "string" }
  },

  "variables": {
    "templateAPIVersion":"2015-11-01",
    "resourceAPIVersion":"2015-06-15",
    "installCDH":"True",
    "addressPrefix":"[parameters('addressPrefix')]",
    "subnetPrefix":"[parameters('subnetPrefix')]",
    "scriptsUri": "file:///C:/cloudera-on-rhel-azure-govcloud",
    "share-resourcesUri": "[concat(variables('scriptsUri'), '/shared-resources-', parameters('vnetNewOrExisting'), '-vnet.json')]",
    "data-nodeUri":"[concat(variables('scriptsUri'), '/data-node-', toLower(subString(parameters('vmSize'), 9, 4)), '.json')]",
    "sa": "[parameters('masterNodeIPAddress')]",
    "ipOctet01": "[concat(split(variables('sa'), '.')[0], '.', split(variables('sa'), '.')[1], '.')]",
    "ipOctet2": "[int(split(variables('sa'), '.')[2])]",
    "ipOctet3": "[int(split(variables('sa'), '.')[3])]",
    "datanodeIpOctet3":"[add(int(split(variables('sa'), '.')[3]), parameters('datanodeOffset'))]",

    "storageAccount": {
      "prefix": "[parameters('storageAccountPrefix')]",
      "type": "[parameters('storageAccountType')]"
    },
    "clusterTshirtSizeEval": {
      "masterNodeCount": 1,
      "dataNodeCount": "[parameters('numberOfDataNodes')]",
      "highAvailability": "false"
    },
    "clusterTshirtSizeProd": {
      "masterNodeCount": 3,
      "dataNodeCount": "[parameters('numberOfDataNodes')]",
      "highAvailability": "true"
    },
    "clusterSpec": "[variables(concat('clusterTshirtSize', parameters('tshirtSize')))]",
    "vmSpec": {
      "vmSize": "[parameters('vmSize')]",
      "adminUserName": "[parameters('adminUserName')]",
      "adminPassword": "[parameters('adminPassword')]",
      "masterNodeASName": "[concat(parameters('dnsNamePrefix'), '-mnAS')]",
      "dataNodeASName": "[concat(parameters('dnsNamePrefix'), '-dnAS')]"
    },
    "networkSpec": {
      "addressPrefix": "[variables('addressPrefix')]",
      "subnetPrefix": "[variables('subnetPrefix')]",
      "ipOctet01": "[variables('ipOctet01')]",
      "ipOctet2": "[variables('ipOctet2')]",
      "ipOctet3": "[variables('ipOctet3')]",
      "datanodeIpOctet3":"[variables('datanodeIpOctet3')]",
      "masterIP":"[variables('sa')]",
      "workerIP":"[concat(variables('ipOctet01'), add(variables('ipOctet2'), div(variables('datanodeIpOctet3'), 255)), '.', mod(variables('datanodeIpOctet3'), 255))]",
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "virtualNetworkRGName":"[parameters('virtualNetworkRGName')]",
      "vnetNewOrExisting": "[parameters('vnetNewOrExisting')]",
      "virtualNetworkSubnetName": "[parameters('subnetName')]"
    },
    "newVNetId":"[resourceId(concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "existingVNetId":"[resourceId(parameters('virtualNetworkRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "VNetId": "[variables(concat(parameters('vnetNewOrExisting'),'VNetId'))]"
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('share-resourcesUri')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "resourceAPIVersion": { "value": "[variables('resourceAPIVersion')]"      },
          "networkSpec":        { "value": "[variables('networkSpec')]"             },
          "masterNodeASName":   { "value": "[variables('vmSpec').masterNodeASName]" },
          "dataNodeASName":     { "value": "[variables('vmSpec').dataNodeASName]"   }
        }
      }
    },
    {
      "name": "master-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/master-node.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "vnetID":             { "value": "[variables('VNetId')]" },
          "resourceAPIVersion": { "value": "[variables('resourceAPIVersion')]" },
          "dnsNamePrefix":      { "value": "[parameters('dnsNamePrefix')]"    },
          "scriptsUri":         { "value": "[variables('scriptsUri')]"        },
          "storageAccount":     { "value": "[variables('storageAccount')]"    },
          "vmCount":            { "value": "[variables('clusterSpec').masterNodeCount]" },
          "vmSpec":             { "value": "[variables('vmSpec')]"            },
          "networkSpec":        { "value": "[variables('networkSpec')]"       },
          "clusterSpec":        { "value": "[variables('clusterSpec')]"       }
        }
      }
    },
    {
      "name": "data-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('data-nodeUri')]",
          "contentVersion": "1.0.0.1"
        },

        "parameters": {
          "vnetID":             { "value":"[variables('VNetId')]"         },
          "resourceAPIVersion": { "value":"[variables('resourceAPIVersion')]" },
          "dnsNamePrefix":      { "value": "[parameters('dnsNamePrefix')]"    },
          "scriptsUri":         { "value": "[variables('scriptsUri')]"        },
          "storageAccount":     { "value": "[variables('storageAccount')]"    },
          "vmCount":            { "value": "[variables('clusterSpec').dataNodeCount]"  },
          "vmSpec":             { "value": "[variables('vmSpec')]"            },
          "networkSpec":        { "value": "[variables('networkSpec')]"       },
          "clusterSpec":        { "value": "[variables('clusterSpec')]"       }
        }

      }
    },
    {
      "name": "setup-cloudera",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/data-node",
        "Microsoft.Resources/deployments/master-node"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/setup-cloudera.json')]",
          "contentVersion": "1.0.0.1"
        },

        "parameters": {
          "resourceAPIVersion": { "value":"[variables('resourceAPIVersion')]" },
          "dnsNamePrefix":      { "value": "[parameters('dnsNamePrefix')]"    },
          "scriptsUri":         { "value": "[variables('scriptsUri')]"        },
          "vmSpec":             { "value": "[variables('vmSpec')]"            },
          "networkSpec":        { "value": "[variables('networkSpec')]"       },
          "clusterSpec":        { "value": "[variables('clusterSpec')]"       },
          "fqdn":               { "value": "[reference('master-node').outputs.fqdn.value]" },
          "cmUsername":         { "value": "[parameters('cmUsername')]"       },
          "cmPassword":         { "value": "[parameters('cmPassword')]"       },
          "installCDH":         { "value": "[variables('installCDH')]"        }
        }

      }
    }
  ]
}
